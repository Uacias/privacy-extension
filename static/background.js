import{i as N,_ as S,w as R,a as _,b as x,g as b}from"./assets/noirc_abi_wasm_bg-DJmkL4KX.js";async function w(){const n="offscreen.html";if(!chrome.offscreen)throw new Error("Offscreen API not available.");await chrome.offscreen.hasDocument()||await chrome.offscreen.createDocument({url:n,reasons:[chrome.offscreen.Reason.WORKERS],justification:"Need to run zk-SNARK proof generation with Aztec bb.js in isolated context"})}const E=()=>new Promise((n,O)=>{let i=0;const e=setInterval(()=>{i++;try{chrome.runtime.connect({name:"proof-channel"}).disconnect(),clearInterval(e),n()}catch{i>=10&&(clearInterval(e),O(new Error("Offscreen not ready")))}},200)});console.log("📦 [background] Loaded");let p={garaga:null,ready:!1};const I=async()=>{if(!p.ready){console.log("🧠 [ZK Init] Starting...");try{await N(),await S(fetch(R)),await _(fetch(x)),p.garaga=b,p.ready=!0,console.log("✅ [ZK Init] Ready")}catch(n){console.error("❌ [ZK Init] Failed:",n)}}},A=async()=>{p.ready||await I()};let c=null;chrome.runtime.onInstalled.addListener(()=>{console.log("🔁 [Service Worker] onInstalled"),I()});chrome.runtime.onMessage.addListener((n,O,i)=>(console.log("📨 [Message] Received:",n),(async()=>{if(await A(),n.type==="SET_SEED"){chrome.storage.session.set({decryptedSeed:n.seed},()=>{i({status:"ok"})});return}if(n.type==="GET_SEED"){chrome.storage.session.get(["decryptedSeed"],e=>{i({seed:e.decryptedSeed||null})});return}if(n.type==="GENERATE_OPERATION"){const{metadata:e}=n,o=(await chrome.storage.session.get(["decryptedSeed"])).decryptedSeed;if(!o)return i({error:"No seed unlocked"});const t=p.garaga,r=BigInt(`0x${o}`),a=await chrome.storage.local.get(["confirmedOperations","pendingOperations","nullifiedOperations","abortedOperations"]),s=a.confirmedOperations||[],d=a.pendingOperations||[],h=a.nullifiedOperations||[],f=a.abortedOperations||[],u=s.length+d.length+h.length+f.length,l=crypto.randomUUID(),g=t.poseidonHashBN254(t.poseidonHashBN254(r,r),BigInt(u)),m=t.poseidonHashBN254(g,g),P=t.poseidonHashBN254(g,m),y={id:l,index:u,secret:g.toString(),nullifier:m.toString(),hash:P.toString(),metadata:e};await chrome.storage.local.set({pendingOperations:[...d,y]}),i({id:l,hash:y.hash});return}if(n.type==="IMPORT_OPERATION"){const{op:e}=n,o=(await chrome.storage.session.get(["decryptedSeed"])).decryptedSeed;if(!o)return i({error:"No seed unlocked"});const t=p.garaga;BigInt(`0x${o}`);const r=await chrome.storage.local.get(["confirmedOperations","pendingOperations","nullifiedOperations"]),a=r.confirmedOperations||[],s=r.pendingOperations||[],d=r.nullifiedOperations||[],h=a.length+s.length+d.length,f=crypto.randomUUID(),u=t.poseidonHashBN254(e.secret,e.nullifier),l={id:f,index:h,secret:e.secret.toString(),nullifier:e.nullifier.toString(),hash:u.toString(),metadata:e.metadata};await chrome.storage.local.set({pendingOperations:[...s,l]}),i({id:f,hash:l.hash});return}if(n.type==="CONFIRM_OPERATION"){const{id:e}=n,o=await chrome.storage.local.get(["pendingOperations","confirmedOperations"]),t=o.pendingOperations||[],r=o.confirmedOperations||[],a=t.findIndex(d=>d?.id===e);if(a===-1)return i({status:"error",reason:"Not found"});const[s]=t.splice(a,1);r.push(s),await chrome.storage.local.set({pendingOperations:t,confirmedOperations:r}),console.log("[bg] Confirmed:",s),i({status:"confirmed"});return}if(n.type==="ABORT_OPERATION"){const{id:e}=n,o=await chrome.storage.local.get(["pendingOperations","abortedOperations"]),t=o.pendingOperations||[],r=o.abortedOperations||[],a=t.filter(s=>s.id!==e);r.push(...t.filter(s=>s.id===e)),await chrome.storage.local.set({pendingOperations:a,abortedOperations:r}),i({status:"aborted"});return}if(n.type==="NULLIFY_OPERATION"){const{id:e}=n,o=await chrome.storage.local.get(["confirmedOperations","nullifiedOperations"]),t=o.nullifiedOperations||[],r=o.confirmedOperations||[],a=r.filter(d=>d.id!==e),s=[...t,...r.filter(d=>d.id===e)];await chrome.storage.local.set({confirmedOperations:a,nullifiedOperations:s}),i({status:"nullified"});return}if(n.type==="GET_CONFIRMED_OPERATIONS"&&chrome.storage.session.get(["decryptedSeed"],e=>e.decryptedSeed?(chrome.storage.local.get(["confirmedOperations"],t=>{i({operations:t.confirmedOperations||[]})}),!0):i({error:"No seed unlocked"})),n.type==="GET_PENDING_OPERATIONS"&&chrome.storage.session.get(["decryptedSeed"],e=>e.decryptedSeed?(chrome.storage.local.get(["pendingOperations"],t=>{i({operations:t.pendingOperations||[]})}),!0):i({error:"No seed unlocked"})),n.type==="GENERATE_PROOF"){await w(),await E(),crypto.randomUUID();const e=await chrome.storage.local.get(["pendingOperations","confirmedOperations"]),o=e.pendingOperations||[],t=e.confirmedOperations||[],r={type:"GENERATE_PROOF",circuit:n.circuit,witnessInput:n.witnessInput,confirmedOperations:t,pendingOperations:o};return await chrome.storage.session.set({pendingProofRequest:r}),console.log("[background] 📥 Stored pendingProofRequest in session"),await chrome.action.setPopup({popup:"popup.html"}),chrome.action.openPopup(),c=i,!0}if(n.type==="APPROVE_PROOF")return chrome.storage.session.get(["pendingProofRequest"],async e=>{const o=e.pendingProofRequest;if(!o){c&&(c({error:"No request found"}),c=null),chrome.action.setPopup({popup:"index.html"});return}chrome.storage.session.remove("pendingProofRequest",async()=>{try{await w(),await E();const t=chrome.runtime.connect({name:"proof-channel"});t.postMessage({type:"GENERATE_PROOF",circuit:o.circuit,witnessInput:o.witnessInput,confirmedOperations:o.confirmedOperations,pendingOperations:o.pendingOperations}),t.onMessage.addListener(r=>{r.type==="PROOF_RESPONSE"?(c&&(c({proof:r.honkCalldataHex}),c=null),chrome.action.setPopup({popup:"index.html"})):r.type==="PROOF_ERROR"&&(c&&(c({error:r.error}),c=null),chrome.action.setPopup({popup:"index.html"}))})}catch(t){c&&(c({error:t.message||String(t)}),c=null),chrome.action.setPopup({popup:"index.html"})}})}),!0})(),!0));
