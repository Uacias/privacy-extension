import{i as T,_ as P,w as S,a as I,b as _,g as b}from"./assets/noirc_abi_wasm_bg-DJmkL4KX.js";async function w(){const o="offscreen.html";if(!chrome.offscreen)throw new Error("Offscreen API not available.");await chrome.offscreen.hasDocument()||await chrome.offscreen.createDocument({url:o,reasons:[chrome.offscreen.Reason.WORKERS],justification:"Need to run zk-SNARK proof generation with Aztec bb.js in isolated context"})}const E=()=>new Promise((o,g)=>{let n=0;const t=setInterval(()=>{n++;try{chrome.runtime.connect({name:"proof-channel"}).disconnect(),clearInterval(t),o()}catch{n>=10&&(clearInterval(t),g(new Error("Offscreen not ready")))}},200)});console.log("📦 [background] Loaded");let l={garaga:null,ready:!1};const N=async()=>{if(!l.ready){console.log("🧠 [ZK Init] Starting...");try{await T(),await P(fetch(S)),await I(fetch(_)),l.garaga=b,l.ready=!0,console.log("✅ [ZK Init] Ready")}catch(o){console.error("❌ [ZK Init] Failed:",o)}}},A=async()=>{l.ready||await N()};let c=null;chrome.runtime.onInstalled.addListener(()=>{console.log("🔁 [Service Worker] onInstalled"),N()});chrome.runtime.onMessage.addListener((o,g,n)=>(console.log("📨 [Message] Received:",o),(async()=>{if(await A(),o.type==="SET_SEED"){chrome.storage.session.set({decryptedSeed:o.seed},()=>{n({status:"ok"})});return}if(o.type==="GET_SEED"){chrome.storage.session.get(["decryptedSeed"],t=>{n({seed:t.decryptedSeed||null})});return}if(o.type==="GENERATE_OPERATION"){const{metadata:t}=o,e=(await chrome.storage.session.get(["decryptedSeed"])).decryptedSeed;if(!e)return n({error:"No seed unlocked"});const r=l.garaga,a=BigInt(`0x${e}`),i=await chrome.storage.local.get(["confirmedOperations","pendingOperations","nullifiedOperations","abortedOperations"]),s=i.confirmedOperations||[],d=i.pendingOperations||[],f=i.nullifiedOperations||[],O=i.abortedOperations||[],h=s.length+d.length+f.length+O.length,u=crypto.randomUUID(),p=r.poseidonHashBN254(r.poseidonHashBN254(a,a),BigInt(h)),m=r.poseidonHashBN254(p,p),k=r.poseidonHashBN254(p,m),y={id:u,index:h,secret:p.toString(),nullifier:m.toString(),hash:k.toString(),metadata:t};await chrome.storage.local.set({pendingOperations:[...d,y]}),n({id:u,hash:y.hash});return}if(o.type==="IMPORT_OPERATION"){const{op:t}=o,e=(await chrome.storage.session.get(["decryptedSeed"])).decryptedSeed;if(!e)return n({error:"No seed unlocked"});const r=l.garaga;BigInt(`0x${e}`);const a=await chrome.storage.local.get(["confirmedOperations","pendingOperations","nullifiedOperations","abortedOperations"]),i=a.confirmedOperations||[],s=a.pendingOperations||[],d=a.nullifiedOperations||[],f=a.abortedOperations||[],O=i.length+s.length+d.length+f.length,h=crypto.randomUUID(),u=r.poseidonHashBN254(t.secret,t.nullifier),p={id:h,index:O,secret:t.secret.toString(),nullifier:t.nullifier.toString(),hash:u.toString(),metadata:t.metadata};await chrome.storage.local.set({pendingOperations:[...s,p]}),n({id:h,hash:p.hash});return}if(o.type==="CONFIRM_OPERATION"){const{id:t}=o,e=await chrome.storage.local.get(["pendingOperations","confirmedOperations"]),r=e.pendingOperations||[],a=e.confirmedOperations||[],i=r.findIndex(d=>d?.id===t);if(i===-1)return n({status:"error",reason:"Not found"});const[s]=r.splice(i,1);a.push(s),await chrome.storage.local.set({pendingOperations:r,confirmedOperations:a}),console.log("[bg] Confirmed:",s),n({status:"confirmed"});return}if(o.type==="ABORT_OPERATION"){const{id:t}=o,e=await chrome.storage.local.get(["pendingOperations","abortedOperations"]),r=e.pendingOperations||[],a=e.abortedOperations||[],i=r.filter(s=>s.id!==t);a.push(...r.filter(s=>s.id===t)),await chrome.storage.local.set({pendingOperations:i,abortedOperations:a}),n({status:"aborted"});return}if(o.type==="NULLIFY_OPERATION"){const{id:t}=o,e=await chrome.storage.local.get(["confirmedOperations","nullifiedOperations"]),r=e.nullifiedOperations||[],a=e.confirmedOperations||[],i=a.filter(d=>d.id!==t),s=[...r,...a.filter(d=>d.id===t)];await chrome.storage.local.set({confirmedOperations:i,nullifiedOperations:s}),n({status:"nullified"});return}if(o.type==="GET_CONFIRMED_OPERATIONS"&&chrome.storage.session.get(["decryptedSeed"],t=>t.decryptedSeed?(chrome.storage.local.get(["confirmedOperations"],r=>{n({operations:r.confirmedOperations||[]})}),!0):n({error:"No seed unlocked"})),o.type==="GET_PENDING_OPERATIONS"&&chrome.storage.session.get(["decryptedSeed"],t=>t.decryptedSeed?(chrome.storage.local.get(["pendingOperations"],r=>{n({operations:r.pendingOperations||[]})}),!0):n({error:"No seed unlocked"})),o.type==="EXECUTE_TRANSACTION"){const{body:t}=o;try{const e=await fetch("https://privacypoolsstaging.visoft.dev/asp/executeAccountTransaction",{method:"POST",headers:{"Content-Type":"application/json"},body:t});if(!e.ok){let i="Unknown error";try{const s=await e.json(),{code:d,message:f}=s;i=`[${d}] ${f}`}catch{i="Error while executing transaction."}n({error:i});return}const a=(await e.json()).transaction_hash;n({hash:a})}catch{n({error:"Network error or backend unavailable."})}return}if(o.type==="GET_PROOF_DATA"){const{body:t}=o;try{const e=await fetch("https://privacypoolsstaging.visoft.dev/asp/getProofData",{method:"POST",headers:{"Content-Type":"application/json"},body:t});if(!e.ok){n({error:"Error while fetching proof data. Make sure the passed data is correct or try again later."});return}const r=await e.json();n({data:r})}catch{n({error:"Network error or backend unavailable."})}return}if(o.type==="GET_TRANSACTION_FEE_DATA"){const{body:t}=o;try{const e=await fetch("https://privacypoolsstaging.visoft.dev/asp/getTransactionFee",{method:"POST",headers:{"Content-Type":"application/json"},body:t});if(!e.ok){n({error:"Failed to fetch withdraw fee."});return}const r=await e.json();n({data:r})}catch{n({error:"Network error or backend unavailable."})}return}if(o.type==="GET_TOKEN_DECIMALS"){const{tokenAddress:t}=o;try{const e=await fetch("https://privacypoolsstaging.visoft.dev/asp/getTokenDecimals",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token_address:t})});if(!e.ok){n({error:"Failed to fetch token decimals."});return}const r=await e.json();n({data:r})}catch{n({error:"Network error or backend unavailable."})}return}if(o.type==="GET_TOKEN_NAME"){const{tokenAddress:t}=o;try{const e=await fetch("https://privacypoolsstaging.visoft.dev/asp/getTokenName",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token_address:t})});if(!e.ok){n({error:"Failed to fetch token name."});return}const r=await e.json();n({data:r})}catch{n({error:"Network error or backend unavailable."})}return}if(o.type==="GENERATE_PROOF"){await w(),await E(),crypto.randomUUID();const t=await chrome.storage.local.get(["pendingOperations","confirmedOperations"]),e=t.pendingOperations||[],r=t.confirmedOperations||[],a={type:"GENERATE_PROOF",circuit:o.circuit,witnessInput:o.witnessInput,confirmedOperations:r,pendingOperations:e};return await chrome.storage.session.set({pendingProofRequest:a}),console.log("[background] 📥 Stored pendingProofRequest in session"),await chrome.action.setPopup({popup:"popup.html"}),chrome.action.openPopup(),c=n,!0}if(o.type==="APPROVE_PROOF")return chrome.storage.session.get(["pendingProofRequest"],async t=>{const e=t.pendingProofRequest;if(!e){c&&(c({error:"No request found"}),c=null),chrome.action.setPopup({popup:"index.html"});return}chrome.storage.session.remove("pendingProofRequest",async()=>{try{await w(),await E();const r=chrome.runtime.connect({name:"proof-channel"});r.postMessage({type:"GENERATE_PROOF",circuit:e.circuit,witnessInput:e.witnessInput,confirmedOperations:e.confirmedOperations,pendingOperations:e.pendingOperations}),r.onMessage.addListener(a=>{a.type==="PROOF_RESPONSE"?(c&&(c({proof:a.honkCalldataHex}),c=null),chrome.action.setPopup({popup:"index.html"})):a.type==="PROOF_ERROR"&&(c&&(c({error:a.error}),c=null),chrome.action.setPopup({popup:"index.html"}))})}catch(r){c&&(c({error:r.message||String(r)}),c=null),chrome.action.setPopup({popup:"index.html"})}})}),!0})(),!0));
